/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

const Developer = (props) => {
    const group = useRef()
    const { nodes, materials, animations } = useGLTF('/models/animations/tree.glb')
    const { actions } = useAnimations(animations, group)
    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
                    <group name="0531b0aee76e437286fa1480cfa5eaf0fbx" rotation={[Math.PI / 2, 0, 0]}>
                        <group name="Object_2">
                            <group name="RootNode">
                                <group name="Armature" rotation={[-Math.PI / 2, 0, 0]} scale={491.491}>
                                    <group name="Object_5" scale={0.1}>
                                        <group name="Object_10" rotation={[-Math.PI / 2, 0, 0]} scale={72.086} />
                                        <skinnedMesh
                                            name="Object_11"
                                            geometry={nodes.Object_11.geometry}
                                            material={materials.Tree}
                                            skeleton={nodes.Object_11.skeleton}
                                        />
                                        <primitive object={nodes._rootJoint} />
                                    </group>
                                </group>
                                <group
                                    name="Camera001"
                                    position={[748.113, 534.367, 650.764]}
                                    rotation={[3.127, 0.756, 2.69]}
                                    scale={100}>
                                    <group name="Object_23" />
                                </group>
                                <group name="Icosphere001" rotation={[-Math.PI / 2, 0, 0]} scale={72.086} />
                                <group
                                    name="Sun"
                                    position={[755.46, 898.84, 279.323]}
                                    rotation={[0.585, -0.547, -0.304]}
                                    scale={100}>
                                    <group name="Object_20" rotation={[Math.PI / 2, 0, 0]}>
                                        <group name="Object_21" />
                                    </group>
                                </group>
                                <group
                                    name="Sun001"
                                    position={[755.46, 898.84, 279.323]}
                                    rotation={[-1.336, 0.374, 0.627]}
                                    scale={100}>
                                    <group name="Object_17" rotation={[Math.PI / 2, 0, 0]}>
                                        <group name="Object_18" />
                                    </group>
                                </group>
                                <group
                                    name="Sun002"
                                    position={[755.46, 898.84, 279.323]}
                                    rotation={[0.304, -0.087, -1.384]}
                                    scale={100}>
                                    <group name="Object_14" rotation={[Math.PI / 2, 0, 0]}>
                                        <group name="Object_15" />
                                    </group>
                                </group>
                            </group>
                        </group>
                    </group>
                </group>
                <mesh
                    name="Cube"
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube.geometry}
                    material={materials.Material}
                />
            </group>
        </group>
    )
}

useGLTF.preload('/models/animations/tree.glb')

export default Developer
